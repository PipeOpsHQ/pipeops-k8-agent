1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ include "pipeops-agent.namespace" . }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "pipeops-agent.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ include "pipeops-agent.namespace" . }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ include "pipeops-agent.namespace" . }} svc -w {{ include "pipeops-agent.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ include "pipeops-agent.namespace" . }} {{ include "pipeops-agent.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ include "pipeops-agent.namespace" . }} -l "app.kubernetes.io/name={{ include "pipeops-agent.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ include "pipeops-agent.namespace" . }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ include "pipeops-agent.namespace" . }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Check the status of your PipeOps Agent:
   kubectl get pods --namespace {{ include "pipeops-agent.namespace" . }} -l "app.kubernetes.io/name={{ include "pipeops-agent.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

3. View the agent logs:
   kubectl logs --namespace {{ include "pipeops-agent.namespace" . }} -l "app.kubernetes.io/name={{ include "pipeops-agent.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

4. Monitor the agent:
   kubectl logs --namespace {{ include "pipeops-agent.namespace" . }} -l "app.kubernetes.io/name={{ include "pipeops-agent.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -f

{{- if not .Values.agent.pipeops.token }}

‚ö†Ô∏è  WARNING: No PipeOps API token provided!
   The agent will not be able to connect to PipeOps without a valid token.
   
   Please upgrade your deployment with a valid token:
   helm upgrade {{ .Release.Name }} {{ .Chart.Name }} \
     --set agent.pipeops.token="your-pipeops-token" \
     --set agent.cluster.name="your-cluster-name"
{{- end }}

{{- if not .Values.agent.cluster.name }}

‚ö†Ô∏è  WARNING: No cluster name provided!
   Please set a cluster name to identify this cluster in PipeOps:
   helm upgrade {{ .Release.Name }} {{ .Chart.Name }} \
     --set agent.cluster.name="your-cluster-name"
{{- end }}

üìñ For more information:
   - Documentation: https://docs.pipeops.io/
   - Chart repository: https://github.com/{{ .Values.image.repository | replace "ghcr.io/" "" | replace "/pipeops-k8-agent" "" }}/pipeops-k8-agent
   - Issues: https://github.com/{{ .Values.image.repository | replace "ghcr.io/" "" | replace "/pipeops-k8-agent" "" }}/pipeops-k8-agent/issues

üöÄ Happy deploying with PipeOps!
