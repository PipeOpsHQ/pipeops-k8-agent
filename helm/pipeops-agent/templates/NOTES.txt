🚀 PipeOps Agent has been deployed successfully!

📊 Monitor your deployment:
  kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/name={{ include "pipeops-agent.name" . }}
  kubectl logs -n {{ .Release.Namespace }} deployment/{{ include "pipeops-agent.fullname" . }} -f

🔧 Check agent status:
  kubectl describe deployment {{ include "pipeops-agent.fullname" . }} -n {{ .Release.Namespace }}

🗂️  Agent state is persisted in ConfigMap:
  kubectl get configmap {{ include "pipeops-agent.fullname" . }}-state -n {{ .Release.Namespace }}

⚠️  If the agent keeps re-registering (shows "Generated new agent ID" repeatedly):
  1. Check RBAC permissions:
     kubectl auth can-i create configmaps --as=system:serviceaccount:{{ .Release.Namespace }}:{{ include "pipeops-agent.serviceAccountName" . }} -n {{ .Release.Namespace }}
  
  2. Verify state ConfigMap creation:
     kubectl get configmap {{ include "pipeops-agent.fullname" . }}-state -n {{ .Release.Namespace }} -o yaml
  
  3. Check agent logs for state errors:
     kubectl logs -n {{ .Release.Namespace }} deployment/{{ include "pipeops-agent.fullname" . }} | grep -i "state\|configmap"

🔗 Useful commands:
  # View agent configuration
  kubectl get configmap {{ include "pipeops-agent.fullname" . }}-config -n {{ .Release.Namespace }} -o yaml
  
  # Clear agent state (forces re-registration)
  kubectl delete configmap {{ include "pipeops-agent.fullname" . }}-state -n {{ .Release.Namespace }}
  kubectl rollout restart deployment {{ include "pipeops-agent.fullname" . }} -n {{ .Release.Namespace }}

📖 For more information, visit: https://docs.pipeops.io

2. Check the status of your PipeOps Agent:
   kubectl get pods --namespace {{ include "pipeops-agent.namespace" . }} -l "app.kubernetes.io/name={{ include "pipeops-agent.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

3. View the agent logs:
   kubectl logs --namespace {{ include "pipeops-agent.namespace" . }} -l "app.kubernetes.io/name={{ include "pipeops-agent.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

4. Monitor the agent:
   kubectl logs --namespace {{ include "pipeops-agent.namespace" . }} -l "app.kubernetes.io/name={{ include "pipeops-agent.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -f

{{- if not .Values.agent.pipeops.token }}

⚠️  WARNING: No PipeOps API token provided!
   The agent will not be able to connect to PipeOps without a valid token.
   
   Please upgrade your deployment with a valid token:
   helm upgrade {{ .Release.Name }} {{ .Chart.Name }} \
     --set agent.pipeops.token="your-pipeops-token" \
     --set agent.cluster.name="your-cluster-name"
{{- end }}

{{- if not .Values.agent.cluster.name }}

⚠️  WARNING: No cluster name provided!
   Please set a cluster name to identify this cluster in PipeOps:
   helm upgrade {{ .Release.Name }} {{ .Chart.Name }} \
     --set agent.cluster.name="your-cluster-name"
{{- end }}

📖 For more information:
   - Documentation: https://docs.pipeops.io/
   - Chart repository: https://github.com/{{ .Values.image.repository | replace "ghcr.io/" "" | replace "/pipeops-k8-agent" "" }}/pipeops-k8-agent
   - Issues: https://github.com/{{ .Values.image.repository | replace "ghcr.io/" "" | replace "/pipeops-k8-agent" "" }}/pipeops-k8-agent/issues

🚀 Happy deploying with PipeOps!
