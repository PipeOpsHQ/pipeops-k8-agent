# Default values for pipeops-agent
replicaCount: 1

image:
  repository: ghcr.io/pipeopshq/pipeops-k8-agent
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Namespace configuration
namespace:
  create: true
  name: "pipeops-system"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  fsGroup: 65532

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532

# Service configuration
service:
  enabled: false
  type: ClusterIP
  annotations: {}
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# PipeOps Agent Configuration
agent:
  # PipeOps API configuration
  pipeops:
    apiUrl: "https://api.pipeops.io"  # HTTP API endpoint (no longer WebSocket)
    token: ""  # Set this to your PipeOps token
  
  # FRP configuration
  frp:
    enabled: true
    server:
      host: "frp.pipeops.io"
      port: 7000
      url: "https://frp.pipeops.io:7000"
      token: ""  # FRP server token
      timeout: 30s
      tls:
        enabled: true
        insecureSkipVerify: false
    client:
      name: ""  # Will be auto-generated if empty
      user: ""  # FRP user
      logLevel: "info"
      poolCount: 5
      tcpMux: true
      protocol: "tcp"
      tlsEnable: true
      heartbeatInterval: 30s
      heartbeatTimeout: 90s
    auth:
      method: "token"
      tokenEndpoint: "https://api.pipeops.io/auth/frp-token"
    tunnels:
      - name: "k8s-proxy"
        type: "http"
        localIP: "127.0.0.1"
        localPort: 8080
        subdomain: ""  # Will be assigned by server
        enabled: true
      - name: "admin"
        type: "http"
        localIP: "127.0.0.1" 
        localPort: 8081
        subdomain: ""  # Will be assigned by server
        enabled: false
  
  # Cluster configuration
  cluster:
    name: ""  # Set this to your cluster name
  
  # Agent configuration
  id: ""  # Optional: Set specific agent ID
  
  # Kubernetes configuration
  kubernetes:
    inCluster: true
    # kubeconfig: ""  # Optional: path to kubeconfig file

# Resource limits and requests
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# RBAC configuration
rbac:
  create: true
  
# Network policies
networkPolicy:
  enabled: false

# Deployment strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

# Restart policy
restartPolicy: Always

# Health checks
livenessProbe:
  enabled: false
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  enabled: false
  httpGet:
    path: /ready
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3
